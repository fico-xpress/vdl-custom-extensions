<vdl version="4.1">
    <script>
        VDL('vdlx-modal', {
            tag: 'vdlx-modal',

            attributes: [
                {name: 'title', acceptsExpression: true, description: 'Title string for the modal dialog'}
            ],

            template: '<div class="modal fade" role="dialog">\n' +
                '  <div class="modal-dialog" role="document">\n' +
                '    <div class="modal-content" tabIndex="1">\n' +
                '      <div class="modal-header">\n' +
                '        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span>&times;</span></button>\n' +
                '        <h4 class="modal-title" data-bind="text: title">Modal title</h4>\n' +
                '      </div>\n' +
                '      <div class="modal-body" data-bind="if: showContent">\n' +
                '        <vdl-contents></vdl-contents>' +
                '      </div>\n' +
                '      <div class="modal-footer">\n' +
                '        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n' +
                '      </div>\n' +
                '    </div>\n' +
                '  </div>\n' +
                '</div>',

            createViewModel: function (params, component, api) {
                const vm = {
                    showContent: ko.observable(false),
                };

                $(component.element)
                    .on('showModal', evt => {
                        $(component.element).find('.modal').modal('show');
                        vm.showContent(true);
                    })
                    .on('hide.bs.modal', evt => {
                        vm.showContent(false);
                    });

                vm.title = ko.observable(api.unwrap(params.title));

                return vm;
            },

            transform: function (element, attrs, api) {
                const builder = api.getComponentParamsBuilder(element);
                const title = attrs.title;
                if (!!title) {
                    builder.addParam('title', title.expression.isString ? title.rawValue : title.expression.value, !title.expression.isString);
                } else {
                    builder.addParam('title', 'Modal title');
                }
            }
        });
    </script>
</vdl>
